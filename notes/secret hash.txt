Currently, destroying config.inc.php destroys the existing SECRET_HASH with no chance to recover it.

This is not bad in itself, but the long term login cookie relies on this functionality, and we shouldn't kill people's long term cookie validity each time we do a repair reinstall.

Activation codes are also made invalid by this.  Activation codes already use the user seed.

Possible solutions:

-	Remove the long term cookie's reliance on the secret hash
	Unfortunately, the long term cookie really kind of needs this, or cracking is easier.
	Could we change it to use the user seed instead somehow?  Probably.

-	Move the secret hash into another text file
	This means it can't be generated by the installer, but needs to be generated prior to distribution.
	
-	Move the secret hash into the database
	What would be the performance implications?
	
Chosen solution:

-	Remove the secret hash from the calculation of the long term cookie and the activation code
-	Make sure these both use the user seed combined with a constant

We want to prevent

-	People who know how skeleton works being able to easily generate a long term cookie
	or activation code for a given user.
	
-	If possible, we want to ensure that even those who can access the database somehow
	can't figure out how to generate a long term cookie or activation code.
	-	For this, we kind of need that secret hash
	
-	We could replace the secret hash completely with something based on the server
	environment which is unlikely to change app-wide and others are unlikely to know.